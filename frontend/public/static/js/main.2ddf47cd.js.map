{"version":3,"file":"static/js/main.2ddf47cd.js","mappings":"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","sources":["HomeScreen.js","SplashScreen.js","styles.js","SignUpScreen.js","SignInScreen.js","InitialEvaluationScreen.js","NutritionDashboard.js","SleepDashboard.js","StressDashboard.js","LifestyleHistoryDashboard.js","RiskySubstanceDashboard.js","PhysicalActivityDashboard.js","NutritionalEvaluationQuiz.js","ResultsScreen.js","Types2Diabetes.js","BasicUserInfo.js","BMIDisplay.js","ReviewAnswersScreen.js","DrawerNavigationStack.js","ForgotPasswordScreen.js","App.js","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["import React from \"react\";\nimport {\n  StyleSheet,\n  Text,\n  View,\n  Image,\n  Button,\n  TouchableOpacity,\n} from \"react-native\";\n\nexport default function HomeScreen({ navigation }) {\n  return (\n    <View style={styles.container}>\n      <Image\n        source={require(\"./assets/Images/banner_img.jpg\")} // Update the path to your image\n        style={styles.image}\n      />\n      {/* App description */}\n      <Text style={styles.description}>\n        Welcome to WiserHealth! Your journey to a healthier life starts here.\n        Online health and wellness tests can give you a quick snapshot of your\n        health status and help you manage it through lifestyle medicine.\n      </Text>\n      <TouchableOpacity\n        style={styles.modernButton}\n        onPress={() => navigation.navigate(\"SignUp\")}\n      >\n        <Text style={styles.buttonText}>Next</Text>\n      </TouchableOpacity>\n    </View>\n  );\n}\nconst styles = StyleSheet.create({\n  container: {\n    flexGrow: 1,\n    justifyContent: \"center\",\n    padding: 20,\n    backgroundColor: \"#fff\",\n  },\n  image: {\n    width: \"100%\", // Full width of the screen\n    height: 200, // Fixed height for the image\n    borderRadius: 10, // Rounded corners for the image\n    marginBottom: 20, // Space between image and text,\n  },\n  description: {\n    fontSize: 16,\n    lineHeight: 24, // Increased line height for better readability\n    textAlign: \"center\", // Center-aligning the text\n    color: \"#333\", // Darker text color for better contrast\n    marginVertical: 20, // Margin for spacing above and below\n    paddingHorizontal: 15, // Horizontal padding for better layout on small screens\n    backgroundColor: \"#F9F9F9\", // Light background color\n    borderRadius: 8, // Rounded corners\n    padding: 15, // Padding inside the text container\n    shadowColor: \"#000\", // Shadow for depth\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.1,\n    shadowRadius: 4,\n    elevation: 2, // Elevation for Android\n  },\n  modernButton: {\n    backgroundColor: \"#6200EE\", // Primary color\n    borderRadius: 30, // Rounded corners for a modern look\n    paddingVertical: 15,\n    paddingHorizontal: 40,\n    alignItems: \"center\",\n    shadowColor: \"#000\", // Shadow for depth\n    shadowOffset: { width: 0, height: 4 },\n    shadowOpacity: 0.3,\n    shadowRadius: 10,\n    elevation: 5, // For Android shadow\n  },\n  buttonText: {\n    color: \"#fff\", // White text color\n    fontSize: 16,\n    fontWeight: \"bold\",\n    textTransform: \"uppercase\", // Uppercase text for modern feel\n    letterSpacing: 1.5, // Slightly spaced letters for readability\n  },\n});\n","import React, { useEffect } from \"react\";\nimport { StyleSheet, Text, View, Image } from \"react-native\";\nimport { LinearGradient } from \"expo-linear-gradient\"; // Make sure to install this package\n\nexport default function SplashScreen({ navigation }) {\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      navigation.replace(\"Home\");\n    }, 5000);\n    return () => clearTimeout(timer);\n  }, [navigation]); // Added dependency for useEffect\n\n  return (\n    <LinearGradient\n      colors={[\"#A8E6CF\", \"#DCE775\"]} // Light green gradient colors\n      style={styles.container}\n    >\n      <Text style={styles.heading}>WiserHealth</Text>\n\n      <Image\n        source={require(\"./assets/Images/wiser_logo.jpg\")}\n        style={styles.logo}\n      />\n    </LinearGradient>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  heading: {\n    fontSize: 30, // Increased font size for emphasis\n    fontWeight: \"bold\",\n    color: \"#2E7D32\", // Dark green text for contrast\n    marginBottom: 20,\n    textShadowColor: \"rgba(0, 0, 0, 0.3)\", // Subtle shadow for text\n    textShadowOffset: { width: 1, height: 1 },\n    textShadowRadius: 2,\n  },\n  logo: {\n    width: 150, // Adjust width based on the logo size\n    height: 150, // Adjust height based on the logo size\n    borderRadius: 75, // Make the logo circular\n    marginBottom: 20,\n    shadowColor: \"#000\", // Shadow for logo\n    shadowOffset: { width: 0, height: 4 },\n    shadowOpacity: 0.3,\n    shadowRadius: 8,\n    elevation: 5, // For Android shadow\n  },\n});\n","// styles.js\nimport { StyleSheet } from \"react-native\";\n\nconst commonStyles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    padding: 20,\n    backgroundColor: \"#fff\",\n  },\n  heading: {\n    fontSize: 24,\n    fontWeight: \"bold\",\n    textAlign: \"center\",\n    marginBottom: 10,\n  },\n  subHeading: {\n    fontSize: 16,\n    textAlign: \"center\",\n    margin: 10,\n  },\n  subText: {\n    fontSize: 14,\n    textAlign: \"center\",\n    color: \"#7D7D7D\",\n    marginBottom: 20,\n  },\n  question: {\n    fontSize: 18,\n    fontWeight: \"bold\",\n    marginBottom: 20,\n    textAlign: \"center\",\n  },\n  optionButton: {\n    borderWidth: 1,\n    borderColor: \"#C4C4C4\",\n    borderRadius: 8,\n    paddingVertical: 15,\n    paddingHorizontal: 20,\n    marginBottom: 10,\n    alignItems: \"center\",\n  },\n  selectedOption: {\n    backgroundColor: \"#D3EAF7\",\n    borderColor: \"#007BFF\",\n    fontWeight: \"bold\",\n  },\n  optionText: {\n    fontSize: 16,\n  },\n  error: {\n    color: \"red\",\n    fontSize: 20,\n    marginBottom: 12,\n  },\n  modernButton: {\n    backgroundColor: \"#6200EE\", // Primary color\n    borderRadius: 30, // Rounded corners for a modern look\n    paddingVertical: 15,\n    paddingHorizontal: 40,\n    alignItems: \"center\",\n    shadowColor: \"#000\", // Shadow for depth\n    shadowOffset: { width: 0, height: 4 },\n    shadowOpacity: 0.3,\n    shadowRadius: 10,\n    elevation: 5, // For Android shadow\n    margin: 10,\n  },\n  buttonText: {\n    color: \"#fff\",\n    fontSize: 16,\n    fontWeight: \"bold\",\n    textTransform: \"uppercase\",\n    letterSpacing: 1.5,\n  },\n  progressBarContainer: {\n    height: 12,\n    width: \"100%\",\n    backgroundColor: \"#e0e0e0\",\n    borderRadius: 6,\n    overflow: \"hidden\",\n    marginVertical: 15,\n  },\n  progressBar: {\n    height: \"100%\",\n    borderRadius: 6,\n  },\n  progressText: {\n    fontSize: 16,\n    color: \"#333\",\n    marginBottom: 10,\n    textAlign: \"center\",\n  },\n  // sign in styles\n\n  input: {\n    height: 50,\n    borderColor: \"#DCDCDC\",\n    borderWidth: 1,\n    marginBottom: 15,\n    paddingHorizontal: 15,\n    borderRadius: 8,\n    backgroundColor: \"#F7F7F7\",\n    fontSize: 16,\n  },\n  passwordContainer: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    borderColor: \"#DCDCDC\",\n    borderWidth: 1,\n    marginBottom: 15,\n    paddingHorizontal: 15,\n    borderRadius: 8,\n    backgroundColor: \"#F7F7F7\",\n  },\n  inputPassword: {\n    flex: 1,\n    height: 50,\n    fontSize: 16,\n  },\n  eyeIcon: {\n    padding: 10,\n  },\n  icon: {\n    width: 24,\n    height: 24,\n  },\n  signInButton: {\n    backgroundColor: \"#24a0ed\",\n    paddingVertical: 15,\n    paddingHorizontal: 40,\n    borderRadius: 8,\n    alignItems: \"center\",\n    marginTop: 20,\n    shadowOffset: { width: 0, height: 4 },\n    shadowOpacity: 0.3,\n    shadowRadius: 10,\n    elevation: 5,\n  },\n  signInButtonText: {\n    color: \"#fff\",\n    fontSize: 18,\n    fontWeight: \"600\",\n  },\n  error: {\n    color: \"red\",\n    fontSize: 14,\n    marginBottom: 10,\n  },\n  footer: {\n    marginTop: 20,\n    alignItems: \"center\",\n  },\n  signupButton: {\n    backgroundColor: \"#4CAF50\",\n    paddingVertical: 15,\n    paddingHorizontal: 40,\n    borderRadius: 8,\n    alignItems: \"center\",\n    marginTop: 20,\n    fontWeight: 600,\n    border: \"3px solid #4CAF50\",\n    shadowOffset: { width: 0, height: 4 },\n    shadowOpacity: 0.3,\n    shadowRadius: 10,\n    elevation: 5,\n  },\n  // social media container styles\n  socialButtonsContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginBottom: 20,\n    width: \"100%\",\n  },\n  socialButton: {\n    padding: 10,\n  },\n  // bmi and userinfo container styles\n\n  input: {\n    height: 50,\n    borderColor: \"#DCDCDC\",\n    borderWidth: 1,\n    marginBottom: 15,\n    paddingHorizontal: 15,\n    borderRadius: 8,\n    backgroundColor: \"#F7F7F7\",\n    fontSize: 16,\n  },\n  picker: {\n    height: 50,\n    width: \"100%\",\n    marginBottom: 20,\n  },\n  button: {\n    backgroundColor: \"#4CAF50\",\n    padding: 10,\n    alignItems: \"center\",\n    marginTop: 20,\n  },\n  buttonText: {\n    color: \"#fff\",\n    fontSize: 16,\n  },\n  bmiResult: {\n    fontSize: 48,\n    fontWeight: \"bold\",\n    color: \"#333\",\n    marginBottom: 20,\n  },\n  linkText: {\n    color: \"#24a0ed\",\n    fontSize: 16,\n    marginTop: 10,\n    textAlign: \"center\",\n    textDecorationStyle: \"underline\",\n  },\n  //review answers\n\n  card: {\n    backgroundColor: \"#fff\",\n    padding: 15,\n    borderRadius: 10,\n    marginVertical: 10,\n    shadowColor: \"#000\",\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.2,\n    shadowRadius: 2,\n    elevation: 3,\n  },\n  cardTitle: {\n    fontSize: 18,\n    fontWeight: \"bold\",\n    color: \"#3f51b5\",\n    marginBottom: 10,\n  },\n  cardContent: {\n    paddingLeft: 10,\n    marginVertical: 5,\n  },\n  questionText: {\n    fontSize: 16,\n    color: \"#333\",\n  },\n  answerText: {\n    fontSize: 16,\n    color: \"#388e3c\",\n  },\n});\n\nexport default commonStyles;\n","import React, { useState, useEffect } from \"react\";\nimport { Text, View, Image, TextInput, TouchableOpacity } from \"react-native\";\nimport axios from \"axios\";\nimport commonStyles from \"./styles\";\n\nexport default function SignUpScreen({ navigation }) {\n  const [username, setUserName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [showPassword, setShowPassword] = useState(true); // State for toggling password visibility\n  const [errors, setErrors] = useState({});\n  const [isFormSubmitted, setIsFormSubmitted] = useState(false);\n\n  // Validate function to check all fields\n  const validateForm = () => {\n    let validationErrors = {};\n\n    if (!username) {\n      validationErrors.username = \"Username is required.\";\n    }\n\n    if (!email) {\n      validationErrors.email = \"Email is required.\";\n    } else if (!/\\S+@\\S+\\.\\S+/.test(email)) {\n      validationErrors.email = \"Email is invalid.\";\n    }\n\n    if (!phoneNumber) {\n      validationErrors.phoneNumber = \"Phone number is required.\";\n    } else if (!/^\\d{10}$/.test(phoneNumber)) {\n      validationErrors.phoneNumber = \"Phone number must be 10 digits.\";\n    }\n\n    if (!password) {\n      validationErrors.password = \"Password is required.\";\n    } else if (password.length < 6) {\n      validationErrors.password = \"Password must be at least 6 characters.\";\n    }\n\n    if (password !== confirmPassword) {\n      validationErrors.confirmPassword = \"Passwords do not match.\";\n    }\n\n    setErrors(validationErrors);\n    return validationErrors;\n  };\n\n  // Update validations when the form is submitted\n  useEffect(() => {\n    if (isFormSubmitted) {\n      validateForm();\n    }\n  }, [username, email, phoneNumber, password, confirmPassword]);\n\n  // Clear errors on valid input dynamically\n  const handleUsernameChange = (text) => {\n    setUserName(text);\n    if (errors.username && text) {\n      setErrors((prevErrors) => ({ ...prevErrors, username: null }));\n    }\n  };\n\n  const handleEmailChange = (text) => {\n    setEmail(text);\n    if (errors.email && /\\S+@\\S+\\.\\S+/.test(text)) {\n      setErrors((prevErrors) => ({ ...prevErrors, email: null }));\n    }\n  };\n\n  const handlePhoneNumberChange = (text) => {\n    setPhoneNumber(text);\n    if (errors.phoneNumber && /^\\d{10}$/.test(text)) {\n      setErrors((prevErrors) => ({ ...prevErrors, phoneNumber: null }));\n    }\n  };\n\n  const handlePasswordChange = (text) => {\n    setPassword(text);\n    if (errors.password && text.length >= 6) {\n      setErrors((prevErrors) => ({ ...prevErrors, password: null }));\n    }\n  };\n\n  const handleConfirmPasswordChange = (text) => {\n    setConfirmPassword(text);\n    if (errors.confirmPassword && text === password) {\n      setErrors((prevErrors) => ({ ...prevErrors, confirmPassword: null }));\n    }\n  };\n\n  const handleSubmit = async () => {\n    setIsFormSubmitted(true);\n\n    const errors = validateForm();\n    if (Object.keys(errors).length === 0) {\n      const userData = {\n        username,\n        email,\n        phoneNumber,\n        password,\n      };\n\n      try {\n        const response = await axios.post(\n          \"http://localhost:5050/register\",\n          userData\n        );\n        console.log(\"Response from server:\", response.data);\n        alert(response.data.message);\n        navigation.navigate(\"InitialEvaluationScreen\");\n      } catch (error) {\n        console.error(\n          \"Error:\",\n          error.response ? error.response.data : error.message\n        );\n      }\n    } else {\n      console.log(\"Form has errors!\", errors);\n    }\n  };\n\n  return (\n    <View style={commonStyles.container}>\n      <Text style={commonStyles.heading}>Sign Up</Text>\n\n      <TextInput\n        style={commonStyles.input}\n        placeholder=\"Username\"\n        onChangeText={handleUsernameChange}\n        value={username}\n      />\n      {isFormSubmitted && errors.username && (\n        <Text style={commonStyles.error}>{errors.username}</Text>\n      )}\n\n      <TextInput\n        style={commonStyles.input}\n        placeholder=\"Email\"\n        onChangeText={handleEmailChange}\n        value={email}\n        keyboardType=\"email-address\"\n      />\n      {isFormSubmitted && errors.email && (\n        <Text style={commonStyles.error}>{errors.email}</Text>\n      )}\n\n      <TextInput\n        style={commonStyles.input}\n        placeholder=\"Phone Number\"\n        onChangeText={handlePhoneNumberChange}\n        value={phoneNumber}\n        keyboardType=\"phone-pad\"\n      />\n      {isFormSubmitted && errors.phoneNumber && (\n        <Text style={commonStyles.error}>{errors.phoneNumber}</Text>\n      )}\n\n      <View style={commonStyles.passwordContainer}>\n        <TextInput\n          style={commonStyles.inputPassword}\n          placeholder=\"Password\"\n          onChangeText={handlePasswordChange}\n          value={password}\n          secureTextEntry={showPassword}\n        />\n        <TouchableOpacity\n          style={commonStyles.eyeIcon}\n          onPress={() => setShowPassword(!showPassword)}\n        >\n          <Image\n            source={\n              showPassword\n                ? require(\"./assets/Images/eye.png\")\n                : require(\"./assets/Images/view.png\")\n            }\n            style={commonStyles.icon}\n          />\n        </TouchableOpacity>\n      </View>\n      {isFormSubmitted && errors.password && (\n        <Text style={commonStyles.error}>{errors.password}</Text>\n      )}\n\n      <View style={commonStyles.passwordContainer}>\n        <TextInput\n          style={commonStyles.inputPassword}\n          placeholder=\"Confirm Password\"\n          onChangeText={handleConfirmPasswordChange}\n          value={confirmPassword}\n          secureTextEntry={showPassword}\n        />\n        <TouchableOpacity\n          style={commonStyles.eyeIcon}\n          onPress={() => setShowPassword(!showPassword)}\n        >\n          <Image\n            source={\n              showPassword\n                ? require(\"./assets/Images/eye.png\")\n                : require(\"./assets/Images/view.png\")\n            }\n            style={commonStyles.icon}\n          />\n        </TouchableOpacity>\n      </View>\n      {isFormSubmitted && errors.confirmPassword && (\n        <Text style={commonStyles.error}>{errors.confirmPassword}</Text>\n      )}\n      {/* add socialmedia button */}\n\n      <View style={commonStyles.socialButtonsContainer}>\n        <TouchableOpacity style={commonStyles.socialButton}>\n          <Image\n            source={require(\"./assets/Images/facebook_icon.png\")}\n            style={commonStyles.icon}\n          />\n          {/* <Text style={styles.socialButtonText}>Sign up with Facebook</Text> */}\n        </TouchableOpacity>\n\n        <TouchableOpacity style={commonStyles.socialButton}>\n          <Image\n            source={require(\"./assets/Images/google_icon.png\")}\n            style={commonStyles.icon}\n          />\n          {/* <Text style={styles.socialButtonText}>Sign up with Google</Text> */}\n        </TouchableOpacity>\n      </View>\n\n      <TouchableOpacity\n        style={commonStyles.signupButton}\n        onPress={handleSubmit}\n      >\n        <Text style={commonStyles.signInButtonText}>Sign Up</Text>\n      </TouchableOpacity>\n\n      <View style={commonStyles.footer}>\n        <Text>Already have an account?</Text>\n        <TouchableOpacity\n          onPress={() => navigation.navigate(\"SignIn\")}\n          style={commonStyles.signInButton}\n        >\n          <Text style={commonStyles.signInButtonText}> Sign In</Text>\n        </TouchableOpacity>\n      </View>\n    </View>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport {\n  StyleSheet,\n  Text,\n  View,\n  TextInput,\n  TouchableOpacity,\n  Image,\n} from \"react-native\";\nimport commonStyles from \"./styles\";\n\nexport default function SignInScreen({ navigation }) {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [showPassword, setShowPassword] = useState(true);\n  const [errors, setErrors] = useState({});\n  const [isFormSubmitted, setIsFormSubmitted] = useState(false);\n\n  // This function will validate both fields\n  const validateForm = () => {\n    let errors = {};\n\n    // Validate email field\n    if (!email) {\n      errors.email = \"Email is required.\";\n    } else if (!/\\S+@\\S+\\.\\S+/.test(email)) {\n      errors.email = \"Email is invalid.\";\n    }\n\n    // Validate password field\n    if (!password) {\n      errors.password = \"Password is required.\";\n    } else if (password.length < 6) {\n      errors.password = \"Password must be at least 6 characters.\";\n    }\n\n    setErrors(errors);\n    return errors;\n  };\n\n  // This effect runs only after the form is submitted\n  useEffect(() => {\n    if (isFormSubmitted) {\n      validateForm();\n    }\n  }, [email, password]);\n\n  const handleEmailChange = (text) => {\n    setEmail(text);\n\n    // Remove email error if email is valid\n    if (errors.email && /\\S+@\\S+\\.\\S+/.test(text)) {\n      setErrors((prevErrors) => ({ ...prevErrors, email: null }));\n    }\n  };\n\n  const handlePasswordChange = (text) => {\n    setPassword(text);\n\n    // Remove password error if password is valid\n    if (errors.password && text.length >= 6) {\n      setErrors((prevErrors) => ({ ...prevErrors, password: null }));\n    }\n  };\n\n  const handleSignIn = () => {\n    setIsFormSubmitted(true);\n\n    const errors = validateForm();\n\n    // If no errors, proceed with sign-in\n    if (Object.keys(errors).length === 0) {\n      console.log(\"Sign In:\", { email, password });\n      console.log(\"Form submitted successfully!\");\n      navigation.navigate(\"InitialEvaluationScreen\");\n    } else {\n      console.log(\"Form has errors!\", errors);\n    }\n  };\n\n  return (\n    <View style={commonStyles.container}>\n      <Text style={commonStyles.heading}>Welcome Back!</Text>\n      <Text style={commonStyles.heading}>Sign In</Text>\n      <TextInput\n        style={commonStyles.input}\n        placeholder=\"Email\"\n        onChangeText={handleEmailChange}\n        value={email}\n        keyboardType=\"email-address\"\n      />\n\n      {/* Display email error only if it exists */}\n      {isFormSubmitted && errors.email && (\n        <Text style={commonStyles.error}>{errors.email}</Text>\n      )}\n\n      <View style={commonStyles.passwordContainer}>\n        <TextInput\n          style={commonStyles.inputPassword}\n          placeholder=\"Password\"\n          onChangeText={handlePasswordChange}\n          value={password}\n          secureTextEntry={showPassword}\n        />\n        <TouchableOpacity\n          style={commonStyles.eyeIcon}\n          onPress={() => setShowPassword(!showPassword)}\n        >\n          <Image\n            source={\n              showPassword\n                ? require(\"./assets/Images/eye.png\")\n                : require(\"./assets/Images/view.png\")\n            }\n            style={commonStyles.icon}\n          />\n        </TouchableOpacity>\n      </View>\n\n      {/* Display password error only if it exists */}\n      {isFormSubmitted && errors.password && (\n        <Text style={commonStyles.error}>{errors.password}</Text>\n      )}\n\n      {/* Minimalistic Sign In Button */}\n      <TouchableOpacity\n        style={commonStyles.signInButton}\n        onPress={handleSignIn}\n      >\n        <Text style={commonStyles.signInButtonText}>Sign In</Text>\n      </TouchableOpacity>\n      {/* forgot password */}\n      <Text\n        style={commonStyles.linkText}\n        onPress={() => navigation.navigate(\"ForgotPasswordScreen\")}\n      >\n        Forgot Password?\n      </Text>\n      <View style={commonStyles.footer}>\n        <Text>Don't have an account?</Text>\n        <TouchableOpacity\n          onPress={() => navigation.navigate(\"SignUp\")}\n          style={commonStyles.signupButton}\n        >\n          <Text style={commonStyles.signInButtonText}> Sign Up</Text>\n        </TouchableOpacity>\n      </View>\n    </View>\n  );\n}\n","import React, { useState } from \"react\";\nimport { View, Text, Image, TouchableOpacity, StyleSheet } from \"react-native\";\n\nconst InitialEvaluationScreen = ({ navigation }) => {\n  const [selectedComponent, setSelectedComponent] = useState(null);\n\n  const handleSelection = (componentName, dashboard) => {\n    setSelectedComponent(componentName);\n    // Navigate to the respective dashboard after selection\n    navigation.navigate(dashboard);\n  };\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>Initial Evaluation</Text>\n\n      {/* Nutrition Button with Image */}\n      <TouchableOpacity\n        style={[\n          styles.componentContainer,\n          selectedComponent === \"Nutrition\" ? styles.selected : null,\n        ]}\n        onPress={() => handleSelection(\"Nutrition\", \"NutritionDashboard\")}\n      >\n        <Image\n          style={styles.image}\n          source={require(\"./assets/Images/nutri.avif\")}\n        />\n        <Text style={styles.buttonText}>Nutrition</Text>\n      </TouchableOpacity>\n\n      {/* Sleep Management Button with Image */}\n      <TouchableOpacity\n        style={[\n          styles.componentContainer,\n          selectedComponent === \"SleepDashboard\" ? styles.selected : null,\n        ]}\n        onPress={() => handleSelection(\"Sleep\", \"SleepDashboard\")}\n      >\n        <Image\n          style={styles.image}\n          source={require(\"./assets/Images/nutri.avif\")}\n        />\n        <Text style={styles.buttonText}>Sleep Management</Text>\n      </TouchableOpacity>\n\n      {/* Stress Management Button with Image */}\n      <TouchableOpacity\n        style={[\n          styles.componentContainer,\n          selectedComponent === \"Stress\" ? styles.selected : null,\n        ]}\n        onPress={() => handleSelection(\"Stress\", \"StressDashboard\")}\n      >\n        <Image\n          style={styles.image}\n          source={require(\"./assets/Images/nutri.avif\")}\n        />\n        <Text style={styles.buttonText}>Stress Management</Text>\n      </TouchableOpacity>\n\n      {/* Risky Substance Avoidance Button with Image */}\n      <TouchableOpacity\n        style={[\n          styles.componentContainer,\n          selectedComponent === \"RiskySubstance\" ? styles.selected : null,\n        ]}\n        onPress={() =>\n          handleSelection(\"RiskySubstance\", \"RiskySubstanceDashboard\")\n        }\n      >\n        <Image\n          style={styles.image}\n          source={require(\"./assets/Images/nutri.avif\")}\n        />\n        <Text style={styles.buttonText}>Risky Substance Avoidance</Text>\n      </TouchableOpacity>\n\n      {/* Lifestyle History Button with Image */}\n      <TouchableOpacity\n        style={[\n          styles.componentContainer,\n          selectedComponent === \"LifestyleHistory\" ? styles.selected : null,\n        ]}\n        onPress={() =>\n          handleSelection(\"LifestyleHistory\", \"LifestyleHistoryDashboard\")\n        }\n      >\n        <Image\n          style={styles.image}\n          source={require(\"./assets/Images/nutri.avif\")}\n        />\n        <Text style={styles.buttonText}>Lifestyle History</Text>\n      </TouchableOpacity>\n\n      {/* Physical Activity Button with Image */}\n      <TouchableOpacity\n        style={[\n          styles.componentContainer,\n          selectedComponent === \"PhysicalActivity\" ? styles.selected : null,\n        ]}\n        onPress={() =>\n          handleSelection(\"PhysicalActivity\", \"PhysicalActivityDashboard\")\n        }\n      >\n        <Image\n          style={styles.image}\n          source={require(\"./assets/Images/nutri.avif\")}\n        />\n        <Text style={styles.buttonText}>Physical Activity</Text>\n      </TouchableOpacity>\n      {/* Type 2 Diabetes */}\n      <TouchableOpacity\n        style={[\n          styles.componentContainer,\n          selectedComponent === \"Types2Diabetes\" ? styles.selected : null,\n        ]}\n        onPress={() => handleSelection(\"Types2Diabetes\", \"Types2Diabetes\")}\n      >\n        <Image\n          style={styles.image}\n          source={require(\"./assets/Images/nutri.avif\")}\n        />\n        <Text style={styles.buttonText}>Types2 Diabetes </Text>\n      </TouchableOpacity>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    padding: 20,\n    backgroundColor: \"#f0f0f0\",\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: \"bold\",\n    textAlign: \"center\",\n    marginBottom: 20,\n  },\n  componentContainer: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    backgroundColor: \"#ffffff\",\n    padding: 10,\n    marginVertical: 10,\n    borderRadius: 8,\n    elevation: 2,\n  },\n  selected: {\n    backgroundColor: \"#add8e6\", // Light blue color to indicate selection\n  },\n  image: {\n    width: 50,\n    height: 50,\n    marginRight: 15,\n  },\n  buttonText: {\n    fontSize: 18,\n    fontWeight: \"500\",\n  },\n});\n\nexport default InitialEvaluationScreen;\n","import React from \"react\";\nimport {\n  View,\n  Text,\n  StyleSheet,\n  TouchableOpacity,\n  ImageBackground,\n} from \"react-native\";\n\nexport default function NutritionDashboard({ navigation }) {\n  return (\n    <ImageBackground\n      source={require(\"./assets/Images/nutri.avif\")} // Use your background image\n      style={styles.background}\n    >\n      <View style={styles.card}>\n        <Text style={styles.title}>Welcome to Nutrition Dashboard</Text>\n        <Text style={styles.subtitle}>\n          Your journey to better health starts here.\n        </Text>\n\n        <TouchableOpacity\n          style={styles.modernButton}\n          onPress={() => navigation.navigate(\"NutritionalEvaluationQuiz\")}\n        >\n          <Text style={styles.buttonText}>Start Quiz</Text>\n        </TouchableOpacity>\n\n        {/* Decorative Element: Circular Accent */}\n        {/* <View style={styles.circleAccent} /> */}\n      </View>\n    </ImageBackground>\n  );\n}\n\nconst styles = StyleSheet.create({\n  background: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  card: {\n    width: \"90%\",\n    maxWidth: 400,\n    padding: 20,\n    borderRadius: 20,\n    backgroundColor: \"rgba(255, 255, 255, 0.9)\", // Semi-transparent white\n    alignItems: \"center\",\n    borderWidth: 2,\n    borderColor: \"#4CAF50\", // Border color to match the theme\n  },\n  title: {\n    fontSize: 30,\n    fontWeight: \"bold\",\n    textAlign: \"center\",\n    marginBottom: 10,\n    color: \"#2E7D32\",\n  },\n  subtitle: {\n    fontSize: 16,\n    textAlign: \"center\",\n    color: \"#555\",\n    marginBottom: 40,\n  },\n  modernButton: {\n    backgroundColor: \"#4CAF50\", // Bright green color\n    borderRadius: 30,\n    paddingVertical: 15,\n    paddingHorizontal: 40,\n    alignItems: \"center\",\n    borderWidth: 2,\n    borderColor: \"#2E7D32\", // Darker green border\n  },\n  buttonText: {\n    color: \"#fff\",\n    fontSize: 16,\n    fontWeight: \"bold\",\n    textTransform: \"uppercase\",\n    letterSpacing: 1.5,\n  },\n  circleAccent: {\n    width: 100,\n    height: 100,\n    borderRadius: 50,\n    backgroundColor: \"rgba(76, 175, 80, 0.5)\", // Light green accent color\n    position: \"absolute\",\n    bottom: -50, // Position it below the card\n    left: \"50%\",\n    marginLeft: -50, // Center the circle\n    opacity: 0.5, // Slightly transparent\n  },\n});\n","import React from \"react\";\nimport { View } from \"react-native\";\nimport { Text } from \"react-native-paper\";\n\nexport default function SleepDashboard() {\n  return (\n    <View>\n      <Text>Welcome to Sleep Dashboard</Text>\n    </View>\n  );\n}\n","import React from \"react\";\nimport { Text } from \"react-native\";\nimport { View } from \"react-native\";\n\nexport default function StressDashboard() {\n  return (\n    <View>\n      <Text>StressDashboard</Text>\n    </View>\n  );\n}\n","import React from \"react\";\nimport { Text, View } from \"react-native\";\n\nexport default function LifestyleHistoryDashboard() {\n  return (\n    <View>\n      <Text>LifestyleHistoryDashboard </Text>\n    </View>\n  );\n}\n","import React from \"react\";\nimport { Text, View } from \"react-native\";\n\nexport default function RiskySubstanceDashboard() {\n  return (\n    <View>\n      <Text>RiskySubstanceDashboard </Text>\n    </View>\n  );\n}\n","import React from \"react\";\nimport { Text, View } from \"react-native\";\n\nexport default function PhysicalActivityDashboard() {\n  return (\n    <View>\n      <Text>PhysicalActivityDashboard </Text>\n    </View>\n  );\n}\n","import React, { useState, useEffect, useRef } from \"react\";\nimport {\n  View,\n  Text,\n  TouchableOpacity,\n  ScrollView,\n  Animated,\n} from \"react-native\";\nimport commonStyles from \"./styles\";\nimport questionsData from \"./questionsData.json\";\n\nconst NutritionalEvaluationQuiz = ({ route, navigation }) => {\n  const [currentCategoryIndex, setCurrentCategoryIndex] = useState(0);\n  const [currentSubcategoryIndex, setCurrentSubcategoryIndex] = useState(0);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [selectedOptions, setSelectedOptions] = useState({});\n  const [progress, setProgress] = useState(0);\n  const animatedProgress = useRef(new Animated.Value(0)).current;\n\n  const { editMode, questionIndex, answers } = route.params || {};\n\n  const getTotalQuestions = () => {\n    let total = 0;\n    questionsData.forEach((category) => {\n      category.categories.forEach((subcategory) => {\n        total += subcategory.questions.length;\n      });\n    });\n    return total;\n  };\n\n  const getAnsweredQuestions = () => {\n    let answered = 0;\n    for (let i = 0; i < currentCategoryIndex; i++) {\n      questionsData[i].categories.forEach((subcategory) => {\n        answered += subcategory.questions.length;\n      });\n    }\n    for (let j = 0; j < currentSubcategoryIndex; j++) {\n      answered +=\n        questionsData[currentCategoryIndex].categories[j].questions.length;\n    }\n    answered += currentQuestionIndex;\n    return answered;\n  };\n\n  // Handle Edit Mode: Jump to specific question and load previous answers\n  useEffect(() => {\n    if (editMode && answers) {\n      setSelectedOptions(answers); // Preload existing answers\n      setCurrentQuestionIndex(\n        questionIndex % questionsData[0].categories[0].questions.length\n      ); // Move to the right question\n      setCurrentSubcategoryIndex(\n        Math.floor(\n          questionIndex / questionsData[0].categories[0].questions.length\n        )\n      );\n    }\n  }, [editMode, answers, questionIndex]);\n\n  // Update progress when current question changes\n  useEffect(() => {\n    const totalQuestions = getTotalQuestions();\n    const answeredQuestions = getAnsweredQuestions();\n    const newProgress = (answeredQuestions / totalQuestions) * 100;\n    setProgress(newProgress);\n\n    Animated.timing(animatedProgress, {\n      toValue: newProgress,\n      duration: 500,\n      useNativeDriver: false,\n    }).start();\n  }, [currentCategoryIndex, currentSubcategoryIndex, currentQuestionIndex]);\n\n  // Handle selecting an option\n  const handleOptionSelect = (option) => {\n    setSelectedOptions((prevOptions) => ({\n      ...prevOptions,\n      [currentCategoryIndex]: {\n        ...prevOptions[currentCategoryIndex],\n        [currentSubcategoryIndex]: {\n          ...prevOptions[currentCategoryIndex]?.[currentSubcategoryIndex],\n          [currentQuestionIndex]: option,\n        },\n      },\n    }));\n  };\n  useEffect(() => {\n    // Reset states if reset is true\n    if (route.params?.reset) {\n      setCurrentCategoryIndex(0);\n      setCurrentSubcategoryIndex(0);\n      setCurrentQuestionIndex(0);\n      setSelectedOptions({});\n      setProgress(0);\n      animatedProgress.setValue(0); // Reset animated progress\n    }\n  }, [route.params]);\n\n  // Handle moving to the next question or category\n  const handleNextQuestion = () => {\n    const currentCategory = questionsData[currentCategoryIndex];\n    const currentSubcategory =\n      currentCategory.categories[currentSubcategoryIndex];\n    const totalQuestions = currentSubcategory.questions.length;\n\n    if (currentQuestionIndex < totalQuestions - 1) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n    } else {\n      if (currentSubcategoryIndex < currentCategory.categories.length - 1) {\n        setCurrentSubcategoryIndex(currentSubcategoryIndex + 1);\n        setCurrentQuestionIndex(0);\n      } else if (currentCategoryIndex < questionsData.length - 1) {\n        setCurrentCategoryIndex(currentCategoryIndex + 1);\n        setCurrentSubcategoryIndex(0);\n        setCurrentQuestionIndex(0);\n      } else {\n        navigation.navigate(\"ResultsScreen\", { selectedOptions });\n        // navigation.navigate(\"BasicUserInfo\", { selectedOptions });\n        console.log(\"Selected Options:\", selectedOptions);\n      }\n    }\n  };\n\n  const currentCategory = questionsData[currentCategoryIndex] || {};\n  const currentSubcategory = currentCategory.categories\n    ? currentCategory.categories[currentSubcategoryIndex] || {}\n    : {};\n  const { category, subheading } = currentCategory;\n  const { categoryType, questions = [] } = currentSubcategory;\n  const currentQuestion = questions[currentQuestionIndex];\n\n  const totalQuestions = getTotalQuestions();\n  const answeredQuestions = getAnsweredQuestions();\n\n  return (\n    <ScrollView contentContainerStyle={commonStyles.container}>\n      <Text style={commonStyles.heading}>{category || \"Category\"}</Text>\n      <Text style={commonStyles.subHeading}>{subheading || \"Subheading\"}</Text>\n      <Text style={commonStyles.subText}>\n        {categoryType || \"Category Type\"}\n      </Text>\n\n      {/* Progress Bar with Percentage and Question Count */}\n      <Text style={commonStyles.progressText}>\n        {Math.round(progress)}% - Question {answeredQuestions} of{\" \"}\n        {totalQuestions}\n      </Text>\n      <View style={commonStyles.progressBarContainer}>\n        <Animated.View\n          style={[\n            commonStyles.progressBar,\n            {\n              width: animatedProgress.interpolate({\n                inputRange: [0, 100],\n                outputRange: [\"0%\", \"100%\"],\n              }),\n              backgroundColor: \"#4caf50\", // Ensure this is the color of your progress bar\n            },\n          ]}\n        />\n      </View>\n\n      {currentQuestion ? (\n        <>\n          <Text style={commonStyles.question}>{currentQuestion.text}</Text>\n          {currentQuestion.options.map((option, index) => (\n            <TouchableOpacity\n              key={index}\n              style={[\n                commonStyles.optionButton,\n                selectedOptions[currentCategoryIndex]?.[\n                  currentSubcategoryIndex\n                ]?.[currentQuestionIndex] === option &&\n                  commonStyles.selectedOption,\n              ]}\n              onPress={() => handleOptionSelect(option)}\n            >\n              <Text style={commonStyles.optionText}>{option}</Text>\n            </TouchableOpacity>\n          ))}\n\n          <TouchableOpacity\n            style={commonStyles.modernButton}\n            onPress={handleNextQuestion}\n          >\n            <Text style={commonStyles.buttonText}>Next</Text>\n          </TouchableOpacity>\n        </>\n      ) : (\n        <Text>No questions available</Text>\n      )}\n    </ScrollView>\n  );\n};\n\nexport default NutritionalEvaluationQuiz;\n","import React from \"react\";\nimport { View, Text, TouchableOpacity, ScrollView } from \"react-native\";\nimport commonStyles from \"./styles\"; // Import your common styles\nimport questionsData from \"./questionsData.json\"; // Import your questions data\n\nconst ResultsScreen = ({ route, navigation }) => {\n  const selectedOptions = route?.params?.selectedOptions || {};\n\n  const scoringMap = {\n    \"Yes, frequently\": 3,\n    Sometimes: 2,\n    \"Rarely or never\": 1,\n  };\n\n  // Function to calculate total number of questions\n  const getTotalQuestions = () => {\n    let total = 0;\n    questionsData.forEach((category) => {\n      category.categories.forEach((subcategory) => {\n        total += subcategory.questions.length;\n      });\n    });\n    return total;\n  };\n\n  const calculateTotalScore = () => {\n    let totalScore = 0;\n    for (const categoryIndex in selectedOptions) {\n      for (const subcategoryIndex in selectedOptions[categoryIndex]) {\n        for (const questionIndex in selectedOptions[categoryIndex][\n          subcategoryIndex\n        ]) {\n          const answer =\n            selectedOptions[categoryIndex][subcategoryIndex][questionIndex];\n          totalScore += scoringMap[answer] || 0;\n        }\n      }\n    }\n    return totalScore;\n  };\n\n  const totalScore = calculateTotalScore();\n  const totalQuestions = getTotalQuestions();\n  const scorePercentage = (totalScore / (3 * totalQuestions)) * 100;\n\n  if (totalScore === 0) {\n    return (\n      <View style={commonStyles.container}>\n        <Text style={commonStyles.heading}>No answers recorded</Text>\n        <Text style={commonStyles.subheading}>\n          It seems you didn't answer any questions.\n        </Text>\n        <TouchableOpacity\n          onPress={() => navigation.navigate(\"NutritionalEvaluationQuiz\")}\n        >\n          <Text style={commonStyles.buttonText}>Go Back to Quiz</Text>\n        </TouchableOpacity>\n      </View>\n    );\n  }\n\n  return (\n    <ScrollView contentContainerStyle={commonStyles.container}>\n      <Text style={commonStyles.scoreText}>Your Score: {totalScore} / 100</Text>\n      <Text style={commonStyles.scoreText}>\n        Percentage: {Math.round(scorePercentage)}%\n      </Text>\n      <TouchableOpacity\n        style={commonStyles.modernButton}\n        onPress={() =>\n          navigation.navigate(\"ReviewAnswersScreen\", { selectedOptions })\n        }\n      >\n        <Text style={commonStyles.buttonText}>Review Your Answers</Text>\n      </TouchableOpacity>\n\n      <TouchableOpacity\n        style={commonStyles.modernButton}\n        onPress={() =>\n          navigation.navigate(\"NutritionalEvaluationQuiz\", { reset: true })\n        }\n      >\n        <Text style={commonStyles.buttonText}>Retake Quiz</Text>\n      </TouchableOpacity>\n\n      <TouchableOpacity\n        style={commonStyles.modernButton}\n        onPress={() => navigation.navigate(\"InitialEvaluationScreen\")}\n      >\n        <Text style={commonStyles.buttonText}>Go to Home</Text>\n      </TouchableOpacity>\n      <TouchableOpacity\n        style={commonStyles.modernButton}\n        onPress={() => navigation.navigate(\"BMIDisplay\")}\n      >\n        <Text style={commonStyles.buttonText}>Calculate your BMI</Text>\n      </TouchableOpacity>\n    </ScrollView>\n  );\n};\n\nexport default ResultsScreen;\n","import React from \"react\";\nimport { Text } from \"react-native\";\nimport { View } from \"react-native\";\n\nexport default function Types2Diabetes() {\n  return (\n    <View>\n      <Text>Types2Diabetes</Text>\n    </View>\n  );\n}\n","import React, { useState } from \"react\";\nimport {\n  View,\n  Text,\n  TextInput,\n  TouchableOpacity,\n  ScrollView,\n  Picker,\n} from \"react-native\";\nimport commonStyles from \"./styles\";\n\nconst BasicUserInfo = ({ navigation }) => {\n  const [age, setAge] = useState(\"\");\n  const [gender, setGender] = useState(\"Male\");\n  const [height, setHeight] = useState(\"\");\n  const [weight, setWeight] = useState(\"\");\n  const [waist, setWaist] = useState(\"\");\n\n  const handleNext = () => {\n    const heightInMeters = height / 3.281; // Convert feet to meters\n    const bmi = weight / (heightInMeters * heightInMeters);\n\n    // Pass BMI to the next screen\n    navigation.navigate(\"BMIDisplay\", { bmi });\n  };\n\n  return (\n    <ScrollView contentContainerStyle={commonStyles.container}>\n      <Text style={commonStyles.heading}>Enter Basic Info</Text>\n\n      <Text>Age</Text>\n      <TextInput\n        style={commonStyles.input}\n        placeholder=\"Add text\"\n        keyboardType=\"numeric\"\n        value={age}\n        onChangeText={setAge}\n      />\n\n      <Text>Gender</Text>\n      <Picker\n        selectedValue={gender}\n        style={commonStyles.picker}\n        onValueChange={(itemValue) => setGender(itemValue)}\n      >\n        <Picker.Item label=\"Male\" value=\"Male\" />\n        <Picker.Item label=\"Female\" value=\"Female\" />\n      </Picker>\n\n      <Text>Height (feet)</Text>\n      <TextInput\n        style={commonStyles.input}\n        placeholder=\"Add no.\"\n        keyboardType=\"numeric\"\n        value={height}\n        onChangeText={setHeight}\n      />\n\n      <Text>Current Weight (kg)</Text>\n      <TextInput\n        style={commonStyles.input}\n        placeholder=\"Add no.\"\n        keyboardType=\"numeric\"\n        value={weight}\n        onChangeText={setWeight}\n      />\n\n      <Text>Waist Circumference (in)</Text>\n      <TextInput\n        style={commonStyles.input}\n        placeholder=\"Add no.\"\n        keyboardType=\"numeric\"\n        value={waist}\n        onChangeText={setWaist}\n      />\n\n      <TouchableOpacity style={commonStyles.modernButton} onPress={handleNext}>\n        <Text style={commonStyles.buttonText}>Next</Text>\n      </TouchableOpacity>\n    </ScrollView>\n  );\n};\n\nexport default BasicUserInfo;\n","import React, { useState } from \"react\";\nimport { Text, View, TouchableOpacity, Alert, ScrollView } from \"react-native\";\nimport commonStyles from \"./styles\";\nimport questionsData from \"./questionsData.json\";\n\nexport default function BMIDisplay() {\n  // State to store the score\n  const [score, setScore] = useState(null);\n  const [age, setAge] = useState(\"\");\n  const [gender, setGender] = useState(\"Male\");\n  const [height, setHeight] = useState(\"\");\n  const [weight, setWeight] = useState(\"\");\n  const [waist, setWaist] = useState(\"\");\n\n  // Function to handle the calculation when the button is pressed\n  const handleNext = () => {\n    // Perform your calculation logic here\n    const heightInMeters = height / 3.281; // Convert feet to meters\n    const bmi = weight / (heightInMeters * heightInMeters);\n\n    // const calculatedScore = calculateScore();\n\n    // Set the score in the state\n    setScore(bmi);\n\n    return (\n      <ScrollView contentContainerStyle={commonStyles.container}>\n        <Text style={commonStyles.heading}>Enter Basic Info</Text>\n\n        <Text>Age</Text>\n        <TextInput\n          style={commonStyles.input}\n          placeholder=\"Add text\"\n          keyboardType=\"numeric\"\n          value={age}\n          onChangeText={setAge}\n        />\n\n        <Text>Gender</Text>\n        <Picker\n          selectedValue={gender}\n          style={commonStyles.picker}\n          onValueChange={(itemValue) => setGender(itemValue)}\n        >\n          <Picker.Item label=\"Male\" value=\"Male\" />\n          <Picker.Item label=\"Female\" value=\"Female\" />\n        </Picker>\n\n        <Text>Height (feet)</Text>\n        <TextInput\n          style={commonStyles.input}\n          placeholder=\"Add no.\"\n          keyboardType=\"numeric\"\n          value={height}\n          onChangeText={setHeight}\n        />\n\n        <Text>Current Weight (kg)</Text>\n        <TextInput\n          style={commonStyles.input}\n          placeholder=\"Add no.\"\n          keyboardType=\"numeric\"\n          value={weight}\n          onChangeText={setWeight}\n        />\n\n        <Text>Waist Circumference (in)</Text>\n        <TextInput\n          style={commonStyles.input}\n          placeholder=\"Add no.\"\n          keyboardType=\"numeric\"\n          value={waist}\n          onChangeText={setWaist}\n        />\n        {/* Display the current score */}\n        {score !== null && (\n          <Text style={commonStyles.scoreText}>Your Score: {score}</Text>\n        )}\n\n        {/* Button to trigger calculation */}\n        <TouchableOpacity style={commonStyles.button} onPress={handleNext}>\n          <Text style={commonStyles.buttonText}>Calculate</Text>\n        </TouchableOpacity>\n      </ScrollView>\n    );\n  };\n}\n","import React from \"react\";\nimport { View, Text, ScrollView, TouchableOpacity } from \"react-native\";\nimport commonStyles from \"./styles\";\nimport questionsData from \"./questionsData.json\"; // Import your questions data\n\nconst ReviewAnswersScreen = ({ route, navigation }) => {\n  const { selectedOptions = {} } = route.params || {};\n\n  // Log selected options for debugging\n  console.log(\"Received Selected Options:\", selectedOptions);\n\n  if (!questionsData || !questionsData.length) {\n    return (\n      <View style={commonStyles.container}>\n        <Text style={commonStyles.heading}>No Questions Found</Text>\n        <TouchableOpacity\n          style={commonStyles.modernButton}\n          onPress={() => navigation.goBack()}\n        >\n          <Text style={commonStyles.buttonText}>Go Back</Text>\n        </TouchableOpacity>\n      </View>\n    );\n  }\n\n  return (\n    <ScrollView contentContainerStyle={commonStyles.container}>\n      <Text style={commonStyles.heading}>Review Your Answers</Text>\n\n      {questionsData.categories?.map((category, categoryIndex) => (\n        <View key={categoryIndex} style={commonStyles.categoryContainer}>\n          <Text style={commonStyles.categoryTitle}>\n            {category.categoryType}\n          </Text>\n\n          {category.questions?.map((question, questionIndex) => {\n            // Fetch the user's answer if available\n            const userAnswer =\n              selectedOptions[categoryIndex] &&\n              selectedOptions[categoryIndex][0] &&\n              selectedOptions[categoryIndex][0][questionIndex];\n\n            return (\n              <View key={questionIndex} style={commonStyles.questionContainer}>\n                <Text style={commonStyles.questionText}>{question.text}</Text>\n                <Text style={commonStyles.answerText}>\n                  {userAnswer ? `Your answer: ${userAnswer}` : \"Not answered\"}\n                </Text>\n              </View>\n            );\n          })}\n        </View>\n      ))}\n\n      <TouchableOpacity\n        style={commonStyles.modernButton}\n        onPress={() => navigation.goBack()}\n      >\n        <Text style={commonStyles.buttonText}>Go Back</Text>\n      </TouchableOpacity>\n    </ScrollView>\n  );\n};\n\nexport default ReviewAnswersScreen;\n","import React from \"react\";\nimport HomeScreen from \"./HomeScreen\";\n\nexport const DrawerNavigationStack = () => {\n  const Stack = createStackNavigator();\n  const Drawer = createDrawerNavigator();\n  return (\n    <Stack.Navigator initialRouteName=\"HomeScreen\">\n      <Stack.Screen\n        name=\"HomeScreen\"\n        component={HomeScreen}\n        options={{\n          title: \"Home\", //Set Header Title\n          headerLeft: () => (\n            <NavigationDrawerHeader navigationProps={navigation} />\n          ),\n          headerStyle: {\n            backgroundColor: \"#307ecc\", //Set Header color\n          },\n          headerTintColor: \"#fff\", //Set Header text color\n          headerTitleStyle: {\n            fontWeight: \"bold\", //Set Header text style\n          },\n        }}\n      />\n    </Stack.Navigator>\n  );\n};\n","import React, { useState } from \"react\";\nimport { View, Text, TextInput, TouchableOpacity, Alert } from \"react-native\";\nimport commonStyles from \"./styles\";\n\nexport default function ForgotPasswordScreen({ navigation }) {\n  const [email, setEmail] = useState(\"\");\n\n  const handlePasswordReset = () => {\n    if (email) {\n      // Placeholder for actual password reset logic\n      // Here you could send a password reset request to your backend or Firebase\n      Alert.alert(\n        \"Password Reset\",\n        `A password reset link has been sent to ${email}`\n      );\n      setEmail(\"\"); // Clear email field after submission\n    } else {\n      Alert.alert(\"Error\", \"Please enter a valid email address.\");\n    }\n  };\n\n  return (\n    <View style={commonStyles.container}>\n      <Text style={commonStyles.heading}>Forgot Password</Text>\n      <Text style={commonStyles.subHeading}>\n        Please enter your email address to reset your password.\n      </Text>\n\n      {/* Email Input Field */}\n      <TextInput\n        style={commonStyles.input}\n        placeholder=\"Enter your email\"\n        value={email}\n        onChangeText={(text) => setEmail(text)}\n        keyboardType=\"email-address\"\n        autoCapitalize=\"none\"\n        autoCorrect={false}\n      />\n      <TouchableOpacity\n        style={commonStyles.modernButton}\n        onPress={handlePasswordReset}\n      >\n        <Text style={commonStyles.buttonText}>Reset Password</Text>\n      </TouchableOpacity>\n\n      {/* Back to Login */}\n      <TouchableOpacity onPress={() => navigation.navigate(\"SignIn\")}>\n        <Text style={commonStyles.linkText}>Back to Login</Text>\n      </TouchableOpacity>\n    </View>\n  );\n}\n","import HomeScreen from \"./HomeScreen\";\nimport SplashScreen from \"./SplashScreen\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport SignUpScreen from \"./SignUpScreen\";\nimport SignInScreen from \"./SignInScreen\";\nimport \"react-native-gesture-handler\";\nimport InitialEvaluationScreen from \"./InitialEvaluationScreen\";\nimport NutritionDashboard from \"./NutritionDashboard\";\nimport SleepDashboard from \"./SleepDashboard\";\nimport StressDashboard from \"./StressDashboard\";\nimport LifestyleHistoryDashboard from \"./LifestyleHistoryDashboard\";\nimport RiskySubstanceDashboard from \"./RiskySubstanceDashboard\";\nimport PhysicalActivityDashboard from \"./PhysicalActivityDashboard\";\nimport NutritionalEvaluationQuiz from \"./NutritionalEvaluationQuiz\";\nimport ResultsScreen from \"./ResultsScreen\";\nimport Types2Diabetes from \"./Types2Diabetes\";\nimport BasicUserInfo from \"./BasicUserInfo\";\nimport BMIDisplay from \"./BMIDisplay\";\nimport ReviewAnswersScreen from \"./ReviewAnswersScreen\";\nimport { DrawerNavigationStack } from \"./DrawerNavigationStack\";\nimport ForgotPasswordScreen from \"./ForgotPasswordScreen\";\nconst Stack = createStackNavigator();\n\nexport default function App() {\n  return (\n    <NavigationContainer>\n      <Stack.Navigator\n        initialRouteName=\"Splash\"\n        screenOptions={{ headerShown: false }}\n      >\n        <Stack.Screen name=\"Splash\" component={SplashScreen} />\n        <Stack.Screen name=\"Home\" component={HomeScreen} />\n        <Stack.Screen name=\"SignUp\" component={SignUpScreen} />\n        <Stack.Screen name=\"SignIn\" component={SignInScreen} />\n        <Stack.Screen\n          name=\"ForgotPasswordScreen\"\n          component={ForgotPasswordScreen}\n        />\n        <Stack.Screen\n          name=\"DrawerNavigationStack\"\n          component={DrawerNavigationStack}\n        />\n        <Stack.Screen\n          name=\"InitialEvaluationScreen\"\n          component={InitialEvaluationScreen}\n        />\n        <Stack.Screen\n          name=\"NutritionDashboard\"\n          component={NutritionDashboard}\n        />\n        <Stack.Screen name=\"SleepDashboard\" component={SleepDashboard} />\n        <Stack.Screen name=\"StressDashboard\" component={StressDashboard} />\n        <Stack.Screen\n          name=\"LifestyleHistoryDashboard\"\n          component={LifestyleHistoryDashboard}\n        />\n        <Stack.Screen\n          name=\"RiskySubstanceDashboard\"\n          component={RiskySubstanceDashboard}\n        />\n        <Stack.Screen name=\"Types2Diabetes\" component={Types2Diabetes} />\n        <Stack.Screen\n          name=\"PhysicalActivityDashboard\"\n          component={PhysicalActivityDashboard}\n        />\n        <Stack.Screen\n          name=\"NutritionalEvaluationQuiz\"\n          component={NutritionalEvaluationQuiz}\n        />\n        <Stack.Screen name=\"BasicUserInfo\" component={BasicUserInfo} />\n        <Stack.Screen name=\"ResultsScreen\" component={ResultsScreen} />\n        <Stack.Screen name=\"BMIDisplay\" component={BMIDisplay} />\n        <Stack.Screen\n          name=\"ReviewAnswersScreen\"\n          component={ReviewAnswersScreen}\n        />\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [585], () => (__webpack_require__(3931)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["HomeScreen","navigation","_jsxs","View","style","styles","container","children","_jsx","Image","source","require","image","Text","description","TouchableOpacity","modernButton","onPress","navigate","buttonText","StyleSheet","create","flexGrow","justifyContent","padding","backgroundColor","width","height","borderRadius","marginBottom","fontSize","lineHeight","textAlign","color","marginVertical","paddingHorizontal","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","paddingVertical","alignItems","fontWeight","textTransform","letterSpacing","SplashScreen","useEffect","timer","setTimeout","replace","clearTimeout","LinearGradient","colors","heading","logo","flex","textShadowColor","textShadowOffset","textShadowRadius","subHeading","margin","subText","question","optionButton","borderWidth","borderColor","selectedOption","optionText","error","progressBarContainer","overflow","progressBar","progressText","input","passwordContainer","flexDirection","inputPassword","eyeIcon","icon","signInButton","marginTop","signInButtonText","footer","signupButton","border","socialButtonsContainer","socialButton","picker","button","bmiResult","linkText","textDecorationStyle","card","cardTitle","cardContent","paddingLeft","questionText","answerText","SignUpScreen","username","setUserName","useState","email","setEmail","phoneNumber","setPhoneNumber","password","setPassword","confirmPassword","setConfirmPassword","showPassword","setShowPassword","errors","setErrors","isFormSubmitted","setIsFormSubmitted","validateForm","validationErrors","test","length","commonStyles","TextInput","placeholder","onChangeText","text","prevErrors","Object","assign","value","keyboardType","secureTextEntry","async","keys","userData","response","axios","post","console","log","data","alert","message","SignInScreen","handleSignIn","title","componentContainer","selected","marginRight","InitialEvaluationScreen","selectedComponent","setSelectedComponent","handleSelection","componentName","dashboard","NutritionDashboard","ImageBackground","background","subtitle","maxWidth","circleAccent","position","bottom","left","marginLeft","opacity","SleepDashboard","StressDashboard","LifestyleHistoryDashboard","RiskySubstanceDashboard","PhysicalActivityDashboard","NutritionalEvaluationQuiz","route","currentCategoryIndex","setCurrentCategoryIndex","currentSubcategoryIndex","setCurrentSubcategoryIndex","currentQuestionIndex","setCurrentQuestionIndex","selectedOptions","setSelectedOptions","progress","setProgress","animatedProgress","useRef","Animated","Value","current","editMode","questionIndex","answers","params","getTotalQuestions","total","questionsData","forEach","category","categories","subcategory","questions","getAnsweredQuestions","answered","i","j","Math","floor","totalQuestions","newProgress","timing","toValue","duration","useNativeDriver","start","reset","setValue","currentCategory","currentSubcategory","subheading","categoryType","currentQuestion","answeredQuestions","ScrollView","contentContainerStyle","round","interpolate","inputRange","outputRange","_Fragment","options","map","option","index","prevOptions","handleOptionSelect","handleNextQuestion","ResultsScreen","scoringMap","Sometimes","totalScore","calculateTotalScore","categoryIndex","subcategoryIndex","answer","scorePercentage","scoreText","Types2Diabetes","BasicUserInfo","age","setAge","gender","setGender","setHeight","weight","setWeight","waist","setWaist","Picker","selectedValue","onValueChange","itemValue","Item","label","handleNext","heightInMeters","bmi","BMIDisplay","score","setScore","ReviewAnswersScreen","categoryContainer","categoryTitle","userAnswer","questionContainer","goBack","DrawerNavigationStack","Stack","createStackNavigator","createDrawerNavigator","Navigator","initialRouteName","Screen","name","component","headerLeft","NavigationDrawerHeader","navigationProps","headerStyle","headerTintColor","headerTitleStyle","ForgotPasswordScreen","autoCapitalize","autoCorrect","handlePasswordReset","Alert","App","NavigationContainer","screenOptions","headerShown","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","call","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","every","key","splice","r","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","get","g","globalThis","this","Function","e","window","obj","prop","prototype","hasOwnProperty","Symbol","toStringTag","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","id","chunkLoadingGlobal","self","bind","push","__webpack_exports__"],"sourceRoot":""}